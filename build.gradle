buildscript {
    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id "jacoco"
    id "org.sonarqube" version "2.8"
}

sonarqube {
    properties {
        property "sonar.projectKey", "CalidadSoftwareG6_calidad-tetris"
        property "sonar.organization", "calidadsoftwareg6"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", "f87126cc2281106e1e110c19a99e1d5c9c70c03b"
        property "sonar.java.coveragePlugin", "jacoco"
        // property "sonar.tests", "app/src/androidTest/java/com/example/protetris"
        property "sonar.coverage.jacoco.xmlReportPaths", "app/build/reports/coverage/debug/report.xml"
        //property "tsonar.junit.reportPaths", "C:\\Users\\Daniel\\Documents\\GitHub\\calidad-tetris\\test-results\\connected"
    }
}

allprojects {
    repositories {
        google()
        jcenter()

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


task gitPull(type: Exec) {
    description 'Pulls git.'
    commandLine "git", "pull"
}

task gitBranch() {
    def branch = ""
    def proc = "git rev-parse --abbrev-ref HEAD".execute()
    proc.in.eachLine { line -> branch = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    branch
}

task gitAdd(type: Exec){
    description 'Adds the modified elements'
    commandLine "git", "add"
}

task gitCommit(type: Exec) {
    description 'Commit elements that wasnt in the Project before'
    commandLine "git", "commit"

}


task gitPush(type: Exec) {
    description 'Push elements'
    commandLine "git", "push"
}

/*task gitAdd(type: Exec){
	description 'Adds the modified elements'
    commandLine "git", "add"
}

task gitCommit(type: Exec) {
description 'Commit elements that wasnt in the Project before'
commandLine "git", "commit"

}


task gitPush(type: Exec) {
	description 'Push elements'
	commandLine "git", "push"
}*/




